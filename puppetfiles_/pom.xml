<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ercot</groupId>
    <artifactId>puppetfiles</artifactId>
    <version>1.0.3</version>

    <name>puppetfiles</name>

    <packaging>jar</packaging>

    <properties>
        <!-- Maven Configuration -->
        <maven.compiler.release>11</maven.compiler.release>
        <maven.minimum.version>3.3.9</maven.minimum.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Maven Plugin Versions -->
        <maven.clean.version>3.1.0</maven.clean.version>
        <maven.resources.version>3.2.0</maven.resources.version>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <maven.site.version>3.9.1</maven.site.version>
        <maven.jar.version>3.2.0</maven.jar.version>
        <maven.install.version>3.0.0-M1</maven.install.version>
        <maven.deploy.version>3.0.0-M1</maven.deploy.version>
        <maven.versions.version>2.8.1</maven.versions.version>
        <maven.assembly.version>3.3.0</maven.assembly.version>
        <maven.enforcer.version>3.0.0-M3</maven.enforcer.version>
        <maven.jxr.version>3.1.1</maven.jxr.version>
        <maven.springboot.version>2.5.2</maven.springboot.version>

        <!-- Static Analysis Dependency Versions -->
        <jacoco.version>0.8.7</jacoco.version>
        <spotbugs.plugin.version>4.2.3</spotbugs.plugin.version>
        <spotbugs.version>4.3.0</spotbugs.version>
        <findsecbugs.version>1.10.1</findsecbugs.version>
        <pmd.plugin.version>3.14.0</pmd.plugin.version>
        <pmd.version>6.36.0</pmd.version>
        <checkstyle.plugin.version>3.1.2</checkstyle.plugin.version>
        <checkstyle.version>8.44</checkstyle.version>
        <owasp.encoder.version>1.2.3</owasp.encoder.version>

        <!-- Core Dependency Versions -->
        <prometheus.version>0.11.0</prometheus.version>
        <spring.boot.version>2.5.2</spring.boot.version>
        <springdoc.openapi.version>1.5.9</springdoc.openapi.version>
        <micrometer.version>1.7.1</micrometer.version>

        <!-- Testing Dependency Versions -->
        <equalsverifier.version>3.6.1</equalsverifier.version>
        <junit.version>4.13.2</junit.version>

        <!-- Git Client -->
        <jgit.version>5.12.0.202106070339-r</jgit.version>
        <jsch.version>0.1.55</jsch.version>

        <!-- Helm Chart Creation-->
        <helm.version>3.6.2</helm.version>
        <helm.plugin.version>5.9</helm.plugin.version>

        <!-- Image Creation-->
        <jib.version>3.1.1</jib.version>
        <image.tag>latest</image.tag> <!-- OVERRIDE THIS ON THE CLI -->

        <!-- Checksum Creation -->
        <codec.version>1.15</codec.version>

        <!-- RPM Packaging -->
        <rpm.plugin.version>2.2.0</rpm.plugin.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_httpserver</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.owasp.encoder</groupId>
                <artifactId>encoder</artifactId>
                <version>${owasp.encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${codec.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_hotspot</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_httpserver</artifactId>
        </dependency>
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <configuration>
                        <parallel>all</parallel>
                        <useUnlimitedThreads>true</useUnlimitedThreads>
                        <includes>
                            <include>**/*TestSuite.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${maven.versions.version}</version>
                    <configuration>
                        <newVersion>${newVersion}</newVersion>
                    </configuration>
                    <executions>
                        <execution>
                            <id>versions</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>set</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                 <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>${maven.minimum.version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin.version}</version>
                    <configuration>
                        <excludeFilterFile>src/main/resources/spotbugs-ignore.xml</excludeFilterFile>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <failOnError>true</failOnError>
                        <plugins>
                            <plugin>
                                <groupId>com.h3xstream.findsecbugs</groupId>
                                <artifactId>findsecbugs-plugin</artifactId>
                                <version>${findsecbugs.version}</version>
                            </plugin>
                        </plugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>spotbugs</id>
                            <phase>test</phase>
                            <goals>
                                <goal>spotbugs</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd.plugin.version}</version>
                    <configuration>
                        <minimumPriority>3</minimumPriority>
                        <rulesets>
                            <ruleset>src/main/resources/pmd-rules.xml</ruleset>
                        </rulesets>
                        <excludeRoots>
                            <excludeRoot>target/generated-sources</excludeRoot>
                        </excludeRoots>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-vm</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-xml</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>pmd</id>
                            <phase>test</phase>
                            <goals>
                                <goal>pmd</goal>
                                <goal>cpd</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.plugin.version}</version>
                    <configuration>
                        <configLocation>src/main/resources/checkstyle.xml</configLocation>
                        <sourceDirectories>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                        </sourceDirectories>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>checkstyle</id>
                            <phase>test</phase>
                            <goals>
                                <goal>checkstyle</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <configuration>
                        <classifier>boot</classifier>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <excludes>
                                    <exclude>**/generated/**/*</exclude>
                                </excludes>
                                <dataFile>target/jacoco.exec</dataFile>
                                <outputDirectory>target/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <systemPropertyVariables>
                            <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.kiwigrid</groupId>
                    <artifactId>helm-maven-plugin</artifactId>
                    <version>${helm.plugin.version}</version>
                    <configuration>
                        <chartDirectory>puppetfiles</chartDirectory>
                        <chartVersion>${project.version}</chartVersion>
                        <helmDownloadUrl>https://repo.ercot.com/artifactory/maven-thirdparty/sh/helm/cli/3.6.2/helm-v3.6.2-linux-amd64.tar.gz</helmDownloadUrl>
                        <lintStrict>true</lintStrict>
                        <addDefaultRepo>false</addDefaultRepo>
                        <values>
                            <yamlFile>${project.basedir}/helm-config/configuration-development.yaml</yamlFile>
                        </values>
                        <uploadRepoStable>
                            <name>stable-repo</name>
                            <url>${REPO_URL}</url>
                            <type>ARTIFACTORY</type>
                            <username>${USERNAME}</username>
                            <password>${PASSWORD}</password>
                        </uploadRepoStable>
                    </configuration>
                    <executions>
                        <execution>
                            <id>helm</id>
                            <phase>package</phase>
                            <goals>
                                <goal>init</goal>
                                <goal>lint</goal>
                                <goal>package</goal>
                                <goal>upload</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <configuration>
                        <from>
                            <image>docker.repo.ercot.com/ercot/core/distroless/java/11:latest</image>
                        </from>
                        <to>
                            <image>docker.repo.ercot.com/ercot/${project.artifactId}/api</image>
                            <tags>
                                <tag>${image.tag}</tag>
                                <tag>${project.version}</tag>
                            </tags>
                            <auth>
                                <username>${USERNAME}</username>
                                <password>${PASSWORD}</password>
                            </auth>
                        </to>
                        <container>
                            <labels>
                                <maintainer>Brandon Johnson &lt;brandon.johnson@ercot.com&gt;</maintainer>
                                <projectId>AUTOSVC</projectId>
                            </labels>
                        </container>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>${rpm.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>generate-rpm</id>
                            <phase>package</phase>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <distribution>ERCOT Puppetfiles REST API</distribution>
                        <group>Applications/Internet</group>
                        <defineStatements>
                            <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                        </defineStatements>
                        <provides>
                            <provide>${project.artifactId}</provide>
                        </provides>
                        <requires>
                            <require>java >= 11</require>
                        </requires>
                        <mappings>
                            <mapping>
                                <directory>/opt/ercot/puppetfiles</directory>
                                <username>puppetfiles</username>
                                <groupname>puppetfiles</groupname>
                                <filemode>0640</filemode>
                                <artifact>
                                    <classifiers>
                                        <classifier>boot</classifier>
                                    </classifiers>
                                </artifact>
                            </mapping>
                            <mapping>
                                <directory>/usr/lib/systemd/system/</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <username>root</username>
                                <groupname>root</groupname>
                                <filemode>0644</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/resources</location>
                                        <includes>puppetfiles.service</includes>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <directory>/etc/opt/ercot/puppetfiles/configuration/</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <username>puppetfiles</username>
                                <groupname>puppetfiles</groupname>
                                <filemode>0640</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/resources</location>
                                        <includes>puppetfiles-environment.conf</includes>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <directory>/etc/opt/ercot/puppetfiles/configuration/</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <username>puppetfiles</username>
                                <groupname>puppetfiles</groupname>
                                <filemode>0640</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/resources</location>
                                        <includes>application.properties.template</includes>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <directory>/etc/opt/ercot/puppetfiles/secrets/</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <username>puppetfiles</username>
                                <groupname>puppetfiles</groupname>
                                <filemode>0640</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/resources</location>
                                        <includes>puppetfiles.properties.template</includes>
                                    </source>
                                </sources>
                            </mapping>
                        </mappings>
                        <preinstallScriptlet>
                            <script>
                                # Create the user if it doesn't exist and lock the account so people can't login with it.
                                # Only someone with root access can su to it and they'll have to specify a shell.
                                id -u puppetfiles &amp;&gt; /dev/null || useradd -r -M -u 3830 puppetfiles
                                passwd -l puppetfiles &gt; /dev/null 2&gt;&amp;1

                                # Puppetfiles is potentially running if this is an upgrade. Let's stop it so we can do our work.
                                /usr/bin/systemctl stop puppetfiles &gt; /dev/null 2&gt;&amp;1 || true

                                # Remove our logging directory and re-create it.
                                if [[ -d /var/log/ercot/puppetfiles ]]
                                then
                                    rm -rf /var/log/ercot/puppetfiles
                                fi
                            </script>
                        </preinstallScriptlet>
                        <postinstallScriptlet>
                            <script>
                                ln -s /opt/ercot/puppetfiles/puppetfiles-%{version}-boot.jar /opt/ercot/puppetfiles/api.jar

                                mkdir -p /var/log/ercot/puppetfiles/crash/java

                                chmod ug+x /opt/ercot/puppetfiles
                                chmod ug+x /etc/opt/ercot/puppetfiles
                                chmod ug+x /var/log/ercot/puppetfiles

                                chown -R puppetfiles.puppetfiles /etc/opt/ercot/puppetfiles
                                chown -R puppetfiles.puppetfiles /var/log/ercot/puppetfiles

                                /usr/bin/systemctl daemon-reload &gt; /dev/null 2&gt;&amp;1
                            </script>
                        </postinstallScriptlet>
                        <preremoveScriptlet>
                            <script>
                                /usr/bin/systemctl stop puppetfiles &gt; /dev/null 2&gt;&amp;1

                                rm -rf /opt/ercot/puppetfiles/api.jar
                            </script>
                        </preremoveScriptlet>
                        <postremoveScriptlet>
                            <script>
                                /usr/bin/systemctl daemon-reload &gt; /dev/null 2&gt;&amp;1

                                # Remove our logging directory.
                                if [[ -d /var/log/ercot/puppetfiles ]]
                                then
                                    rm -rf /var/log/ercot/puppetfiles
                                fi

                                userdel -fr puppetfiles
                            </script>
                        </postremoveScriptlet>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
           </plugin>
           <plugin>
               <groupId>com.github.spotbugs</groupId>
               <artifactId>spotbugs-maven-plugin</artifactId>
           </plugin>
           <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
           </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven.jxr.version}</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>jenkins</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.kiwigrid</groupId>
                        <artifactId>helm-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
